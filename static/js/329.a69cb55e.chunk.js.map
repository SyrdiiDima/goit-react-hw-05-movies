{"version":3,"file":"static/js/329.a69cb55e.chunk.js","mappings":"2NACA,EAA4B,gCAA5B,EAAqE,6BAArE,EAA4G,8BAA5G,EAAqJ,+BAArJ,EAA4L,4BAA5L,EAAqO,iCAArO,EAA8Q,4BAA9Q,EAAuT,iC,kBCS1SA,EAAe,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MACvBC,GAAWC,EAAAA,EAAAA,MACjB,GAAmBC,EAAAA,EAAAA,UAAQ,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAA7CC,GAAP,eAEQC,EAAqDP,EAArDO,MAAOC,EAA8CR,EAA9CQ,YAAaC,EAAiCT,EAAjCS,WAAYC,EAAqBV,EAArBU,SAAUC,EAAWX,EAAXW,OAC5CC,EAAG,yCAAqCJ,GAC9C,OACE,iCACE,UAAC,KAAD,CAASK,GAAIP,EAAUQ,UAAWC,EAAlC,WACE,SAAC,MAAD,CAAqBC,KAAM,KAD7B,cAGA,iBAAKF,UAAWC,EAAhB,WACE,gBAAKE,IAAKL,EAAKM,IAAKX,EAAOO,UAAWC,KAEtC,4BACA,eAAID,UAAWC,EAAf,SAA2BR,KAC3B,eAAGO,UAAWC,EAAd,yBAA2CN,MAC3C,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,WAGN,mBACA,eAAIG,UAAWC,EAAf,oCACA,eAAYD,UAAWC,EAAvB,UACI,SAAC,KAAD,CAASF,GAAI,OAAQC,UAAWC,EAAhC,mBADK,IAGP,eAAYD,UAAWC,EAAvB,UACE,SAAC,KAAD,CAASF,GAAI,UAAWC,UAAWC,EAAnC,sBADO,IAGX,SAAC,KAAD,Q,QC5BN,EATc,WACZ,OAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcmB,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAiBH,GAAII,KAAKL,KACzB,CAACC,KACG,SAACrB,EAAD,CAAcC,MAAOA","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieInfo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_item\":\"MovieDetails_cast_item__9uIbt\",\"liItem\":\"MovieDetails_liItem__EUpno\",\"go_back\":\"MovieDetails_go_back__fbMuW\",\"add_info\":\"MovieDetails_add_info__QvzK+\",\"image\":\"MovieDetails_image__tPD8f\",\"info_block\":\"MovieDetails_info_block__BDRvm\",\"title\":\"MovieDetails_title__RBndM\",\"user_score\":\"MovieDetails_user_score__QZGld\"};","\n\nimport { useState } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieDetails.module.css'\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\n\n\nexport const MovieDetails = ({ movie }) => {\n  const location = useLocation();\n  const [pathBack] = useState(location.state?.from ?? '/');\n\n  const { title, poster_path, popularity, overview, genres } = movie;\n  const url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  return (\n    <>\n      <NavLink to={pathBack} className={css.go_back}>\n        <HiChevronDoubleLeft size={15}/>Go back \n      </NavLink>\n      <div className={css.info_block}>\n        <img src={url} alt={title} className={css.image} />\n        \n        <div>\n        <h1 className={css.title}>{title}</h1>\n        <p className={css.user_score}>User score: {popularity}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n        </div>\n        </div>\n      <hr />\n      <h3 className={css.add_info}>Aditional information</h3>\n      <li key={1} className={css.liItem}>\n          <NavLink to={'cast'} className={css.cast_item} >Cast</NavLink>\n        </li>\n        <li key={2} className={css.liItem}>\n          <NavLink to={'reviews'} className={css.cast_item}>Reviews</NavLink>\n        </li>\n      <Outlet />\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n\n      title: PropTypes.string,\n      popularity: PropTypes.number,\n      overview: PropTypes.string,\n      genres: PropTypes.string,\n      poster_path: PropTypes.string,\n  \n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { fetchMovieWithId } from 'services/fetch-api';\nconst Movie = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  useEffect(() => {\n    fetchMovieWithId(id).then(setMovie);\n  }, [id]);\n  return <MovieDetails movie={movie} />;\n};\n\nexport default Movie;\n"],"names":["MovieDetails","movie","location","useLocation","useState","state","from","pathBack","title","poster_path","popularity","overview","genres","url","to","className","css","size","src","alt","setMovie","id","useParams","useEffect","fetchMovieWithId","then"],"sourceRoot":""}