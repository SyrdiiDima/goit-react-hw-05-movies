{"version":3,"file":"static/js/448.839d2918.chunk.js","mappings":"gMACA,GAAgB,KAAO,wB,SCGVA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,wBACGA,EAAMC,KAAI,SAAAC,GACT,IAAMC,EAAG,yCAAqCD,EAAKE,cACnD,OAEE,gBAAkBC,UAAWC,EAAAA,KAA7B,UACGJ,EAAKE,cACF,gBAAKG,IAAKJ,EAAKK,IAAKN,EAAKO,KAAMJ,UAAWC,EAAAA,SAE5C,uBAAIJ,EAAKO,QAGX,wBAAMP,EAAKO,QAEX,uCAAeP,EAAKQ,cACpB,oBAVOR,EAAKS,U,0BCIxB,EAVa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQH,GAAOI,EAAAA,EAAAA,MAAPJ,GAKR,OAJAK,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAAIO,KAAKJ,KACvB,CAACH,KAEG,SAACZ,EAAD,CAAUC,MAAOa","sources":["webpack://react-homework-template/./src/components/CastInfo/CastInfo.module.css?0a17","components/CastInfo/CastInfo.jsx","pages/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastInfo_item__E00bZ\"};","\n\nimport PropTypes from 'prop-types';\nimport css from './CastInfo.module.css'\nexport const CastInfo = ({ casts }) => {\n  return (\n    <ul>\n      {casts.map(item => {\n        const url = `https://image.tmdb.org/t/p/w200${item.profile_path}`;\n        return (\n        \n          <li key={item.id} className={css.item}>\n            {item.profile_path ? (\n                <img src={url} alt={item.name} className={css.image}/>\n            ) : (\n              <p>{item.name}</p>\n            )}\n\n            <h2 >{item.name}</h2>\n            \n            <p>Character: {item.character}</p>\n            <hr />\n            </li>\n          \n          \n        );\n      })}\n    </ul>\n  );\n};\n\nCastInfo.propTypes = {\n  casts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};","import { CastInfo } from 'components/CastInfo/CastInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastMovie } from 'services/fetch-api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    fetchCastMovie(id).then(setCast);\n  }, [id]);\n\n  return <CastInfo casts={cast} />;\n};\n\nexport default Cast;\n"],"names":["CastInfo","casts","map","item","url","profile_path","className","css","src","alt","name","character","id","useState","cast","setCast","useParams","useEffect","fetchCastMovie","then"],"sourceRoot":""}