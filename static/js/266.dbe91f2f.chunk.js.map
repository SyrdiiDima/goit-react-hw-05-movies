{"version":3,"file":"static/js/266.dbe91f2f.chunk.js","mappings":"4LACA,EAA6B,+B,SCKhBA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACbC,EAA4B,YAAtBF,EAASG,SAAyB,WAAa,GACzD,OACE,wBACGJ,EAAOK,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKJ,GAAL,OAAWG,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAAYU,UAAWC,EAAxE,SACGN,EAAMO,SAFFP,EAAME,W,2ECDzB,UARa,WACX,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,KAAKH,KACvB,KACI,SAAC,IAAD,CAAYhB,OAAQe,M,mJCT7B,IAAMK,EAAW,gCACXC,EAAM,mCAECH,EAAmB,WAC9B,OAAOI,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,IACnDF,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAM,GAQJ,OAPeA,EAAKC,QAAQrB,KAAI,SAAAsB,GAK9B,MAJc,CACZnB,GAAImB,EAAInB,GACRK,MAAOc,EAAId,cAQRe,EAAmB,SAAApB,GAC9B,OAAOc,MAAM,GAAD,OAAIF,EAAJ,iBAAqBZ,EAArB,oBAAmCa,IAC5CF,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAM,GAQJ,MAPc,CACZZ,MAAOY,EAAKZ,MACZgB,WAAYJ,EAAKI,WACjBC,SAAUL,EAAKK,SACfC,OAAQN,EAAKM,OAAOC,SAAQ,qBAAGC,QAAiBC,KAAK,MACrDC,YAAaV,EAAKU,iBAMbC,EAAiB,SAAA5B,GAC5B,OAAOc,MAAM,GAAD,OAAIF,EAAJ,iBAAqBZ,EAArB,4BAA2Ca,IACpDF,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAM,GAUJ,OATeA,EAAKY,KAAKhC,KAAI,SAAAiC,GAO3B,MANkB,CAChB9B,GAAI8B,EAAM9B,GACVyB,KAAMK,EAAML,KACZM,UAAWD,EAAMC,UACjBC,aAAcF,EAAME,aAAeF,EAAME,aAAe,WAQrDC,EAAmB,SAAAjC,GAC9B,OAAOc,MAAM,GAAD,OAAIF,EAAJ,iBAAqBZ,EAArB,4BAA2Ca,IACpDF,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAM,GASJ,OARgBA,EAAKC,QAAQrB,KAAI,SAAAqC,GAM/B,MALmB,CACjBlC,GAAIkC,EAAOlC,GACXmC,OAAQD,EAAOC,OACfC,QAASF,EAAOE,gBAQbC,EAAmB,SAAAC,GAC9B,OAAOxB,MAAM,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,kBAAiDyB,IAC1D3B,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAM,GAQJ,OAPeA,EAAKC,QAAQrB,KAAI,SAAAsB,GAK9B,MAJc,CACZnB,GAAImB,EAAInB,GACRK,MAAOc,EAAId","sources":["webpack://react-homework-template/./src/components/ListMovies/ListMovies.module.css?08bb","components/ListMovies/ListMovies.jsx","pages/Home.js","services/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_item\":\"ListMovies_movie_item__2JQt6\"};","\nimport { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './ListMovies.module.css'\n\nexport const ListMovies = ({ movies }) => {\n  const location = useLocation();\n  let url = location.pathname !== '/movies' ? '/movies/' : '';\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id} >\n            <NavLink to={`${url}${movie.id}`} state={{ from: location }} className={css.movie_item}>\n              {movie.title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from 'services/fetch-api';\nimport { ListMovies } from 'components/ListMovies/ListMovies';\n\nconst Home = () => {\n  const [trend, setTrend] = useState([]);\n  useEffect(() => {\n    fetchTrendMovies().then(setTrend);\n  }, []);\n  return <ListMovies movies={trend} />;\n};\n//\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '407c6c5ac7b97eafb7da884568d7dfc2';\n\nexport const fetchTrendMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${KEY}`)\n    .then(responce => responce.json())\n    .then(data => {\n      const movies = data.results.map(mov => {\n        const movie = {\n          id: mov.id,\n          title: mov.title,\n        };\n        return movie;\n      });\n      return movies;\n    });\n};\n\nexport const fetchMovieWithId = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}`)\n    .then(responce => responce.json())\n    .then(data => {\n      const movie = {\n        title: data.title,\n        popularity: data.popularity,\n        overview: data.overview,\n        genres: data.genres.flatMap(({ name }) => name).join(', '),\n        poster_path: data.poster_path,\n      };\n      return movie;\n    });\n};\n\nexport const fetchCastMovie = id => {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`)\n    .then(responce => responce.json())\n    .then(data => {\n      const actors = data.cast.map(actor => {\n        const actorData = {\n          id: actor.id,\n          name: actor.name,\n          character: actor.character,\n          profile_path: actor.profile_path ? actor.profile_path : '',\n        };\n        return actorData;\n      });\n      return actors;\n    });\n};\n\nexport const fetchReviewsInfo = id => {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`)\n    .then(responce => responce.json())\n    .then(data => {\n      const reviews = data.results.map(review => {\n        const reviewData = {\n          id: review.id,\n          author: review.author,\n          content: review.content,\n        };\n        return reviewData;\n      });\n      return reviews;\n    });\n};\n\nexport const fetchMoviesQuery = query => {\n  return fetch(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`)\n    .then(responce => responce.json())\n    .then(data => {\n      const movies = data.results.map(mov => {\n        const movie = {\n          id: mov.id,\n          title: mov.title,\n        };\n        return movie;\n      });\n      return movies;\n    });\n};\n"],"names":["ListMovies","movies","location","useLocation","url","pathname","map","movie","to","id","state","from","className","css","title","useState","trend","setTrend","useEffect","fetchTrendMovies","then","BASE_URL","KEY","fetch","responce","json","data","results","mov","fetchMovieWithId","popularity","overview","genres","flatMap","name","join","poster_path","fetchCastMovie","cast","actor","character","profile_path","fetchReviewsInfo","review","author","content","fetchMoviesQuery","query"],"sourceRoot":""}