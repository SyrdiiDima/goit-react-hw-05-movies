{"version":3,"file":"static/js/657.442d2f79.chunk.js","mappings":"yMAsCaA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,wBACGA,EAAMC,KAAI,SAAAC,GACT,IAAMC,EAAM,yCAAqCD,EAAKE,cACtD,OACE,2BACE,wBAAKF,EAAKG,OACTH,EAAKE,cACJ,gBAAKE,IAAKH,EAAQI,IAAKL,EAAKG,QAE5B,uBAAIH,EAAKG,QAEX,uCAAeH,EAAKM,eAPbN,EAAKO,U,0BCZxB,EAVa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQH,GAAOI,EAAAA,EAAAA,MAAPJ,GAKR,OAJAK,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAAIO,KAAKJ,KACvB,CAACH,KAEG,SAACV,EAAD,CAAUC,MAAOW","sources":["components/CastInfo/CastInfo.jsx","pages/Cast.js"],"sourcesContent":["// import PropTypes from 'prop-types';\n\n// export const CastInfo = ({ casts }) => {\n//   return (\n//     <ul>\n//       {casts.map(item => {\n//         const url = `https://image.tmdb.org/t/p/w200${item.profile_path}`;\n//         return (\n//           <li key={item.id}>\n//             <h3>{item.name}</h3>\n//             {item.profile_path ? (\n//               <img src={url} alt={item.name}></img>\n//             ) : (\n//               <p>{item.name}</p>\n//             )}\n//             <p>Character{item.character}</p>\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   );\n// };\n\n\n\n// CastInfo.propTypes = {  \n//   casts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string.isRequired,\n//       profile_path: PropTypes.string,\n//       character: PropTypes.string.isRequired,\n//     })\n//   ),\n// };\n\nimport PropTypes from 'prop-types';\n\nexport const CastList = ({ casts }) => {\n  return (\n    <ul>\n      {casts.map(item => {\n        const imgUrl = `https://image.tmdb.org/t/p/w200${item.profile_path}`;\n        return (\n          <li key={item.id}>\n            <h2>{item.name}</h2>\n            {item.profile_path ? (\n              <img src={imgUrl} alt={item.name} />\n            ) : (\n              <p>{item.name}</p>\n            )}\n            <p>Character: {item.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  casts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};","// import { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { fetchCastMovie } from 'services/fetch-api';\n// import { CastInfo } from 'components/CastInfo/CastInfo';\n\n// const Cast = () => {\n//   const [cast, setCast] = useState([]);\n//   const { id } = useParams();\n\n//   useEffect(() => {\n//     fetchCastMovie(id).then(setCast);\n//   }, [id]);\n\n//   return <CastInfo casts={cast}></CastInfo>;\n// };\n\n// export default Cast;\nimport { CastList } from 'components/CastInfo/CastInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/fetch-api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    fetchMovieCast(id).then(setCast);\n  }, [id]);\n\n  return <CastList casts={cast} />;\n};\n\nexport default Cast;\n"],"names":["CastList","casts","map","item","imgUrl","profile_path","name","src","alt","character","id","useState","cast","setCast","useParams","useEffect","fetchMovieCast","then"],"sourceRoot":""}